AWSTemplateFormatVersion: '2010-09-09'

Resources:
  AtaDbDeployPipelineArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: project
          Value: ata-db

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: ata-db/api
      Tags:
        - Key: project
          Value: ata-db

  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: ata_db_api_docker_image_logs
      RetentionInDays: 5
      Tags:
        - Key: project
          Value: ata-db

  BuildContainer:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Description: ATA DB API Container Building
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: AWS_ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.us-east-1.amazonaws.com/ata-db/api:latest
          - Name: ARTIFACT_FILE
            Value: !Ref ECRRepository
          - Name: RDS_HOST
            Value: '{{resolve:secretsmanager:ATA_DB_CREDENTIALS:SecretString:host}}'
          - Name: DB_NAME
            Value: '{{resolve:secretsmanager:ata-db-name:SecretString:ata-db-name}}'
          - Name: DB_PORT
            Value: '{{resolve:secretsmanager:ATA_DB_CREDENTIALS:SecretString:port}}'
          - Name: DB_USERNAME
            Value: '{{resolve:secretsmanager:ATA_DB_CREDENTIALS:SecretString:username}}'
          - Name: DB_PASSWORD
            Value: '{{resolve:secretsmanager:ATA_DB_CREDENTIALS:SecretString:password}}'
      LogsConfig:
        CloudWatchLogs: 
          GroupName: ata_db_api_docker_image_logs
          Status: ENABLED
          StreamName: ata-db-api-

      ServiceRole: arn:aws:iam::767397767501:role/service-role/AWSCodePipelineServiceRole-us-east-1-ata-db-api-deploy
      Source:
        BuildSpec: pipeline/buildspecs/build-flask-container.yaml
        GitCloneDepth: 1
        Type: CODEPIPELINE
      Tags:
        - Key: project
          Value: ata-db

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: arn:aws:iam::767397767501:role/service-role/AWSCodePipelineServiceRole-us-east-1-ata-db-api-deploy
      ArtifactStore:
        Type: S3
        Location: !Ref AtaDbDeployPipelineArtifactStore
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: arn:aws:codeconnections:us-east-1:767397767501:connection/515a1f58-898b-4cd6-95de-b23d42946107
                FullRepositoryId: BYU-TRG-Team/ata-flask-react
                BranchName: main
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Docker
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildContainer
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: ata-db-codebuild
                RoleArn: arn:aws:iam::767397767501:role/service-role/AWSCodePipelineServiceRole-us-east-1-ata-db-api-deploy
                TemplatePath: SourceArtifact::cloudformation/codebuild/
                    

  CreateCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ata-db-api
      Tags:
        - Key: project
          Value: ata-db

  CreateTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command: 
          - python -m flask
          Environment:
            - Name: FLASK_APP
              Value: dist/ata_flask_react
          Image: !Ref ECRRepository
          Name: ata-db-api
          PortMappings:
            - ContainerPort: 5000
            - ContainerPort: '{{resolve:secretsmanager:ATA_DB_CREDENTIALS:SecretString:port}}'
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: arn:aws:iam::767397767501:role/ata-db-deploy-infrastructure-pipeline
      NetworkMode: awsvpc
      Tags:
        - Key: project
          Value: ata-db